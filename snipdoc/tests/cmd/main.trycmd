```console
$ snipdoc
? 2
Code Documentation Made Simple

Usage: snipdoc[EXE] [OPTIONS] [PATH] <COMMAND>

Commands:
  create-db  Create a local DB file
  check      Validate if snippets are equal, errors or missing configuration
  run        Inject snippet into placeholders
  show       Show snippets
  help       Print this message or the help of the given subcommand(s)

Arguments:
  [PATH]  Source code directory for collecting documentation [default: .]

Options:
  -l, --log <LOG>        Log level [default: INFO]
  -c, --config <CONFIG>  Application config. by default will search `./snipdoc-config.yml`
  -h, --help             Print help
  -V, --version          Print version

```

```console
$ snipdoc --help
Code Documentation Made Simple

Usage: snipdoc[EXE] [OPTIONS] [PATH] <COMMAND>

Commands:
  create-db  Create a local DB file
  check      Validate if snippets are equal, errors or missing configuration
  run        Inject snippet into placeholders
  show       Show snippets
  help       Print this message or the help of the given subcommand(s)

Arguments:
  [PATH]  Source code directory for collecting documentation [default: .]

Options:
  -l, --log <LOG>        Log level [default: INFO]
  -c, --config <CONFIG>  Application config. by default will search `./snipdoc-config.yml`
  -h, --help             Print help
  -V, --version          Print version

```

```console
$ snipdoc create-db --help
Create a local DB file

Usage: snipdoc[EXE] create-db [OPTIONS] [PATH]

Arguments:
  [PATH]  Source code directory for collecting documentation [default: .]

Options:
      --empty            Show the injection operation without changes
  -l, --log <LOG>        Log level [default: INFO]
  -c, --config <CONFIG>  Application config. by default will search `./snipdoc-config.yml`
  -h, --help             Print help
  -V, --version          Print version

```

```console
$ snipdoc run --help
Inject snippet into placeholders

Usage: snipdoc[EXE] run [OPTIONS] [PATH]

Arguments:
  [PATH]  Source code directory for collecting documentation [default: .]

Options:
      --db-file <DB_FILE>  
  -l, --log <LOG>          Log level [default: INFO]
  -c, --config <CONFIG>    Application config. by default will search `./snipdoc-config.yml`
      --dry-run            Show the injection operation without changes
      --format <FORMAT>    Format of the results [default: console] [possible values: table, console]
  -h, --help               Print help
  -V, --version            Print version

```

```console
$ snipdoc show --help
Show snippets

Usage: snipdoc[EXE] show [OPTIONS] [PATH]

Arguments:
  [PATH]  Source code directory for collecting documentation [default: .]

Options:
      --from <FROM>        [default: any] [possible values: yaml, code, any]
  -l, --log <LOG>          Log level [default: INFO]
  -c, --config <CONFIG>    Application config. by default will search `./snipdoc-config.yml`
      --db-file <DB_FILE>  
      --format <FORMAT>    Format of the results [default: console] [possible values: table, console]
  -h, --help               Print help
  -V, --version            Print version

```